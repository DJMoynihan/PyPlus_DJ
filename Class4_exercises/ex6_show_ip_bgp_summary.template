# Some regex revision
# [*>]      - Remove any special regex meaning and take *> as a literal character search
# ^         - anchor to the start of the line.
# \S        - matches any non-whitespace character.
# \s        - matches any whitespace character.
# \d        - matches a digit (equivalent to [0-9]).
# {1,3}     - matches the previous token between 1 and 3 times, as many times as possible, giving back as needed (greedy).
# \.        - matches the character "."
# +         - matches the previous token between one and unlimited times, as many times as possible, giving back as needed (greedy).
# .         - matches any character (except for line terminators).
# *         - matches the previous token between zero and unlimited times, as many times as possible, giving back as needed (greedy).
# K         - matches the character 'K'
# filldown will substitute a blank entry with the last known non-blank entry
# Extract the following fields:
#     Neighbor, Remote AS, Up_Down, and State_PrefixRcvd. Also include the Local AS and the BGP Router ID in each row of the tabular output 
#     (hint: use filldown for this)
Value NEIGHBOR ([0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3})
Value REMOTE_AS (\d+)
Value UP_DOWN (never|\d+w\dd)
Value STATE_PREFIXRCVD (Active|Idle|\d+$$)
Value Filldown LOCAL_AS (\d+)
Value Filldown ROUTER_ID (\d+[.]\d+[.]\d+[.]\d+)

Start
  ^BGP.*${ROUTER_ID}.*local AS number\s+${LOCAL_AS}$$
  ^${NEIGHBOR}\s+\d\s+${REMOTE_AS}\s+.*${UP_DOWN}\s+${STATE_PREFIXRCVD} -> Record
  

EOF
